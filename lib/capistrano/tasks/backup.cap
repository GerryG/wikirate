namespace :backup do
  task :create do
    on roles(:db) do
#      execute :sudo, "/opt/bin/backup_local wikirate"
      execute :sudo, "/opt/bin/backup_remote wikirate"
    end
  end
  
  task :pull do
    invoke 'backup:download'
    invoke 'refresh_local'
  end
  
  task :download do
    run_locally do
      execute :rm, '-rf /tmp/wikirate'
      execute :mkdir, '/tmp/wikirate'
    end
    on roles(:db) do
      download! "#{ fetch :data_backups_dir }/db.gz",     "/tmp/wikirate"
      download! "#{ fetch :data_backups_dir }/files.tgz", "/tmp/wikirate"
    end
  end
  
  task :refresh_local do
    run_locally do
      execute :pull_wikirate
    end
  end
    
  
  task :unzip do
    on roles(:db) do
      backup_dir = fetch :data_backups_dir
      if test( "[ ! -f #{ backup_dir }/db ]")      
        within backup_dir do
          execute :mkdir, 'files; cd files; tar -xzf ../files.tgz'
          execute :zcat, 'db.gz > db'
        end
      end
    end
  end
  
  task :refresh do
    invoke 'backup:unzip'
    on roles(:db) do
      execute :mysql, "-u %s -p%s %s < %s/db" % 
        [:database_user, :database_password, :database, :data_backups_dir ].map { |x| fetch x }
      execute :sudo, "/opt/bin/replace_files #{ fetch :data_backups_dir } #{ shared_path }"
      #custom script for this because file permissions are all www-data.www-data
    end
  end
  
  
  
end